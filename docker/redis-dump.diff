diff -ur node_modules/node-redis-dump/lib/node-redis-dump.js node_modules_save/node-redis-dump/lib/node-redis-dump.js
--- node_modules/node-redis-dump/lib/node-redis-dump.js	2018-08-29 13:24:53.763884645 +0200
+++ node_modules_save/node-redis-dump/lib/node-redis-dump.js	2018-08-29 13:03:26.718613348 +0200
@@ -391,33 +391,43 @@
 					command = items.pop(),
 					callArgs = [];

-				switch (command) {
-					case 'SET':
-					case 'SADD':
-						callArgs = args.match(new RegExp('"?(.+?)"?\\s+"?(.+?)"?(?:\\s|$)', 'i')).slice(1, 3);
-						break;
-
-					case 'RPUSH':
-					case 'LPUSH':
-						callArgs = args.match(new RegExp('"?(.+?)"?\\s+"?([0-9]+?)"?(?:\\s|$)', 'i')).slice(1, 3);
-						break;
-
-					case 'ZADD':
-						callArgs = args.match(new RegExp('"?(.+?)"?\\s+"?([0-9]+?)"?\\s+"?(.+?)"?(\\s|$)', 'i')).slice(1, 4);
-						break;
-
-					case 'HSET':
-						callArgs = args.match(new RegExp('"?(.+?)"?\\s+"?(.+?)"?\\s+"?(.+?)"?(\\s|$)', 'i')).slice(1, 4);
-						break;
-
-					default:
-						console.error(command, args);
-						callback('Error import data! Not supported type!');
-						return;
+				try {
+                    switch (command) {
+                        case 'SET':
+                        case 'SADD':
+                        case 'LPUSH':
+                        case 'LPUSHX':
+                        case 'RPUSH':
+                        case 'RPUSHX':
+                            // only simple form with one value is allowed, no options (EX, NX, ...)
+                            callArgs = args.match(new RegExp('"?(.+?)"?\\s+(["\'](.+?)["\']|(.+?))(?:\\s|$)', 'i')).slice(1, 3);
+                            callArgs[1] = callArgs[1].replace(/(^["']|["']$)/g, '');   // remove optional quotes around value string
+                            break;
+
+                        case 'ZADD':
+                        case 'LSET':
+                        	// only simple form with one value: "ZADD key 1 value", no options (NX, XX, ...)
+                            callArgs = args.match(new RegExp('"?(.+?)"?\\s+"?([0-9]+?)"?\\s+(["\'](.+?)["\']|(.+?))(\\s|$)', 'i')).slice(1, 4);
+                            callArgs[2] = callArgs[2].replace(/(^["']|["']$)/g, '');   // remove optional quotes around value string
+                            break;
+
+                        case 'HSET':
+                            callArgs = args.match(new RegExp('"?(.+?)"?\\s+"?(.+?)"?\\s+(["\'](.+?)["\']|(.+?))(\\s|$)', 'i')).slice(1, 4);
+                            callArgs[2] = callArgs[2].replace(/(^["']|["']$)/g, '');   // remove optional quotes around value string
+                            break;
+
+                        default:
+                            console.error(command, args);
+                            callback('Error import data! Not supported type!');
+                            return;
+                    }
+                }
+                catch (errCmd) {
+					callback('FAIL parse command of known type');
 				}

 				callArgs.push(Callback);
-				this.getClient()[ command ].apply(this.getClient(), callArgs);
+				this.getClient()[ command.toLowerCase() ].apply(this.getClient(), callArgs);
 			}.bind(this);

 			AddRecursive();
